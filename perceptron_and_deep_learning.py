# -*- coding: utf-8 -*-
"""Perceptron and deep learning.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RRCxNz0DJ12SyuVwSxQfgnVXppAQo5LF
"""

def perceptron(x1, x2):
  w1 = 0
  w2 = 0
  b = 0
  y = w1 * x1 + w2 * x2 + b
  if y >0:
    return 1
  else:
    return 0

!pip install --upgrade tensorflow

import tensorflow as tf
tf.__version__

from tensorflow import keras
import numpy as np
import matplotlib.pyplot as plt

mnist = keras.datasets.mnist
(x_train, y_train), (x_test, y_test) = mnist.load_data()

x_train.shape

np.random.seed(0)
tf.random.set_seed(0)

y_train = keras.backend.one_hot(y_train, 10)

y_test = keras.backend.one_hot(y_test, 10)

x_train = x_train/255
x_test = x_test/255

from keras.models import Sequential
from keras.layers import Dense

model = keras.models.Sequential([tf.keras.layers.Flatten(input_shape=(28,28)),tf.keras.layers.Dense(128, activation = 'relu'), tf.keras.layers.Dense(128, activation = 'relu'), tf.keras.layers.Dense(10, activation = 'softmax')])

model.compile(optimizer = 'adam', loss = 'categorical_crossentropy', metrics = ['accuracy'])

model.fit(x_train, y_train, epochs = 5)

